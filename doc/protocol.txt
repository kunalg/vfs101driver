
Command List
------------

     01 - Reset
     02 - GetVersion
     03 - GetPrint
     04 - GetParam
     05 - SetParam
     06 - GetConfig
     07   DownloadPatch
     08   GetRateData
     09   IspRequest
     0A   ProgramFlash
     0B   EraseFlash
     0C   LedStates
     0D   LedEvent
     0E - AbortPrint
     0F   Spare2
     10   Spare3
     11   Spare4
     12 - Peek
     13 - Poke
     14 - SensorSpiTrans
     15   SensorGPIO
     16 - GetFingerState 



Param List
----------

 R - Seen GetParam, tried and worked
 W - Seen SetParam, tried and worked
 x - Seen Get/SetParam, tried and failed
 * - tried and worked
 - - tried and failed

Parm R W Name                Description
0x00 - -
0x01 R *
0x02 - -
0x03 - -
0x04 - x
0x05 - x
0x06 - x
0x07 - x
0x08 - -
0x09 * -
0x0a * W
0x0b * W
0x0c * W
0x0d * W
0x0e * W
0x0f - -
0x10 * W
0x11 R *
0x12 - x
0x13 - -
0x14 R -
0x15 * W
0x16 * W
0x17 * W
0x18 - x
0x19 * W
0x1a * W
0x1b * W
0x1c * -
0x1d * W
0x1e * W
0x1f - x
0x20 - x
0x21 - x
0x22 - x
0x23 - x
0x24 - x
0x25 - -
0x26 - -
0x27 - -
0x28 R -
0x29 - -
0x2a x -
0x2b - -
0x2c * W
0x2d - x
0x2e R -
0x2f * W
0x30 * W
0x31 * *
0x32 * W
0x33 * W
0x34 - x
0x35 - x
0x36 - x
0x37 - x
0x38 - x
0x39 - x
0x3a - x
0x3b - x
0x3c x -
0x3d - -
0x3e - x
0x3f - x
0x40 - x
0x41 x -
0x42 * W
0x43 - x
0x44 * W
0x45 * W
0x46 * W
0x47 * W
0x48 * W
0x49 * W
0x4a R -
0x4b * *
0x4c * *
0x4d * *
0x4e * *
0x4f * *
0x50 * *
0x51 * *
0x52 R W
0x53 * W
0x54 R *
0x55 * W
0x56 * W
0x57 * W P_THRESHOLD         S_level threshold to decrement S_count
0x58 * W
0x59 * W
0x5a * *
0x5b * W
0x5c * W
0x5d * W
0x5e * W P_STATE_3_COUNT     Initial count for state 3 in finger scan state machine
0x5f * W P_STATE_5_COUNT     Initial count for state 5 in finger scan state machine
0x60 * W
0x61 * *
0x62 * W P_INFO_LINE_RATE    How often do info lines replace image lines in a scan?
0x63 * W
0x64 * W
0x65 * *
0x66 * *
0x67 * *
0x68 * *
0x69 * W
0x6a * *
0x6b - -
0x6c - -
0x6d * W
0x6e * W
0x6f * *
0x70 * *
0x71 * *
0x72 * *
0x73 * *
0x74 * *
0x75 * *
0x76 * W
0x77 * W
0x78 * W
0x79 - -
0x7a - -
0x7b - -
0x7c - -
0x7d - -
0x7e - -
0x7f - -                      Write 0x00 will kill device, require powercycle to wake



Register List
-------------

Peek:
	0x00001fe8
	0x00001fec
	0x00001ff0
	0x00001ff4
	0x00001ff8
	0x00001ffc
	0x00ff500e
	0x00ff502c
	0x00ff502e
	0x00ff5032 - VFS_IMAGE_ABCD
	0x00ff5038 - VFS_CONTRAST
	0x00ff503e
	0x00ff9800
	0x00ff9802
	0x00ff9806

Poke:
	0x000005f6
	0x00ff500e
	0x00ff5032
	0x00ff5038
	0x00ff503e
	0x00ff9806



Protocol Description
--------------------
  Command-Response Pairs
  Init-Await-Scan loop
  Scan Types

GetParam/SetParam responses echo the command, then append the data. the
register/param number is replaced with a status number.

  0x0000 - Success
  0x0003 - Failed


Internal Finger Detection State Machine
---------------------------------------

There appears to be a state machine inside the scanner which handles finger detection.
When a scan starts due to GetFingerState() returning 0x02, the state variables are reflected
in bytes 276 - 281 of each scan line.

It starts in state 2 for 32 lines, moves to state 3 for P_STATE_3_COUNT lines, moves into
state 5 until the finger is no longer detected. After the finger is not detected, we
remain in state 5 for P_STATE_5_COUNT more lines and transition to state 6 for a single
line and the scan ends.

While the scan machine is in state 2, the Scan Level value is jammed to 0xFFFF.
After we enter state 3, the value tracks the presence of finger on the swipe strip. As long as
this value stays above P_THRESHOLD the counter value for state 5 will not decrement, holding us
in state 5 for the duration of the finger swipe.  When this value falls below P_THRESHOLD,
the counter begins counting down, exiting state 5 and ending the swipe after P_STATE_5_COUNT
more lines.  If the Scan Level value rises above P_THRESHOLD for 24 lines, the Scan Count is
reset to P_STATE_5_COUNT.



==========================================================================================
===  Scan Structure                                                                    ===
==========================================================================================

A scan is a series of 292 byte lines. Each line is a snapshot from the scan strip, sent
in time order. Unknown if the sampling rate is constant or variable.  Scans may be
initiated by GetPrint() calls, or by GetFingerState() returning 0x02.


=====================================
*** Structure of GetPrint() scans ***
=====================================

Have not analysed these yet.





===========================================
*** Structure of GetFingerState() scans ***
===========================================

After GetFingerState() returns 0x02, we do a LoadImage(), asking for 5000 lines, and
generally get back several hundred to a thousand lines. Each line is 292 bytes long.




[Byte 00 - 01]   Line Type
--------------------------
  This field determines how to decode the rest of the line.  There are two types of line.

    01 FE - Image
    01 01 - Info

  Image lines are the primary type.  All observed patterns appear to operate as if the
  scan was composed entirely of Image lines. However, these Image lines are periodically
  obscured by Info lines.  These Info lines do not disrupt the underlying pattern, but
  instead overlay patterns of their own.  The first Info line appears after a few scan lines,
  then every P_INFO_LINE_RATE scan lines after that, with very occasional off-by-one
  irregularities observed, particularly around the discontinuity at scan line 13.










For Image lines, the rest of the line decodes as follows:

[Byte 02 - 03]   Sequence Number
--------------------------------
  This value increments on each line by 0x1f, except every fourth line increments by 0x20
  instead. The value is little-endian.

  There is a discontinuity after the 13th scan line. Many lines are skipped, then the sequence
  picks up again with no breaks until the print is fully scanned.


[Byte 04 - 05]   ???
--------------------
  Unknown


[Byte 06 -205]   Fingerprint A
------------------------------
  Next 200 bytes are fingerprint data.  This contains a grayscale scanline of the portion
  of the finger in contact with the swipe sensor.


[Byte 206 - 207]   Header 2
---------------------------
  This is a fairly low value, big-endian number.


[Byte 206 - 269]   Image BC
---------------------------
  This looks like a horizontally swapped, lower resolution version of the data in Fingerprint A,
  but not exactly aligned....


[Byte 270 - 273]   Constant
---------------------------
  This appears to be a constant 14 03 6F 00.


[Byte 274 - 275]   Sequence Number'
-----------------------------------
  This is a big-endian version of the sequence number in the bytes 02-03.


[Byte 276]   Scan Curr State
----------------------------
  This appears to be the current state of the internal finger detection state machine.


[Byte 277]   Scan Next State
----------------------------
  This appears to be the next state of the internal finger detection state machine.


[Byte 278 - 279]   Scan Counter
-------------------------------
  For timed states, this appears to be the number of scan lines remaining until we transition to
  a different state.  This different state is loaded into Byte 277 when this counter drops to 0.
  The counter is little-endian.  it is 16 bits, although only the lower 8 bits appear to be
  visible. The upper 8 bits always read back 0x00, even though they appear to have a value in
  them.


[Byte 280 - 281]   Scan Level
-----------------------------
  This appears to be some physical quantity which correlates to the presence of a finger on the
  swipe strip.


[Byte 282]   Two
----------------
  This appears to be a constant 0x02 value.


[Byte 283 - 291]   ???
----------------------
  The rest of the line has some structure, but it is not immediately apparent what it means.
  This section is noticably darker on the line immediately preceding an Info line. It is also
  somewhat different in sections where the scan "smears out" into vertical lines, although
  the Info lines keep coming every P_INFO_LINE_RATE lines.








For Info lines, the rest of the line decodes as follows: (except for the last line of the
entire scan, which is generally somewhat different than the rest of the Info lines...)

[Byte 02 - 03]   Sequence Number
--------------------------------
  This value increments by 0x06 on each info line. The value is big-endian.


[Byte 04 - 05]   ???
---------------------
  Unknown.


[Byte 06 -205]   Presence
-------------------------
  Next 200 bytes are fingerprint data.  This appears to contain an "alpha mask" describing
  which portions of the swipe sensor are actually in contact with the finger at this instant.
  Actually if you set the P_INFO_LINE_RATE to 1, you can see that the "alpha mask" is actually
  a fingerprint image in it's own right, but appears to have lower contrast and is somehow
  inverted-looking.


[Byte 206]   Zero
-----------------
  This appears to be a constant 0x00 value.


[Byte 207 - 208]   Presence
---------------------------
  These are a pair of single-byte values, fairly close in value, which appear to correlate
  strongly with the finger presence information in bytes 6-205.


[Byte 209 - 269]   ???
----------------------
  This stretch of bytes starts out around 0x40, settles to near 0x90 within 3-4 bytes, and is
  very weakly correlated with the finger presence information in Fingerprint A.


[Byte 270 - 273]   Constant
---------------------------
  This appears to be a constant 09 03 8C 00.


[Byte 274 - 291]   ???
----------------------
  The rest of the line has some structure, but it is not immediately apparent what it means.

